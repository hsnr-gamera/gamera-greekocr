===========================
GreekOCR toolkit for Gamera
===========================

:Editor: Christian Brandt, Christoph Dalitz, Andreas Miller

:Version: 2.0.0

Use the 'Addons' section on the `Gamera home page`__ for access to file
releases of this toolkit.

.. __: http://gamera.informatik.hsnr.de/addons/


Overview
'''''''''

The purpose of the *GreekOCR Toolkit* is to help building optical character
recognition (OCR) systems for text documents with polytonal Greek text, i.e.
classical Greek with a wide variety of accents. It can be used as is, but
can also be used as a building block for implementing a custom OCR system
for polytonal Greek.

The toolkit is based on and requires the `Gamera framework`_ for document
analysis and recognition. Moreover it requires the `OCR toolkit for Gamera`_.
As an addon package for Gamera, it provides

.. _`Gamera framework`: http://gamera.sf.net/
.. _`OCR toolkit for Gamera`: http://gamera.informatik.hsnr.de/addons/ocr4gamera/

- a ready-to-run python script ``greekocr4gamera`` which acts as
  a basic GreekOCR-system

- python library functions for building a custom GreekOCR system

Please note that the toolkit currently does not include any training data.
This means that you must create a training data base of Greek characters
before you can use the script ``greekocr4gamera``.

Approaches for recognizing accents
----------------------------------

Compared to texts with Roman letters or modern (or *monotonal*) Greek,
classical (or *polytonal*) Greek uses a large number of accents that
can be used in a wide range of combinations. Compared to the ordinary
OCR process, this requires a special treatment both for attaching accents
to characters and for recognizing the resulting combinations. From a
general point of view, two different approaches are possible:

**Wholistic approach:**
  Identify each character as a whole, including its accents.
  This approach requires that all possible character/accents combinations
  have been predefined and are present as samples in the training data.

**Separatistic approach:**
  Identify core characters and accents separately and combine them
  subsequently. In this case, the training data contains the core
  characters and the individual accents.

This toolkit offers both possibilities. You must therefore make sure
that your training data matches the chosen recognition approach.

Output code
-----------

The toolkit can generate the OCR result in two different codes:

- Unicode as specified in the Unicode standards `Greek`_
  (Unicode range 0370-03FF) and `Combining Diacritical Marks`_
  (Unicode range 0300-036F).

- LaTeX code with the `Teubner style`_ for representing polytonal Greek accents
  in combination with the Babel style option *polutonikogreek*.

.. _Greek: http://unicode.org/charts/PDF/U0370.pdf
.. _`Combining Diacritical Marks`: http://unicode.org/charts/PDF/U0300.pdf
.. _`Teubner style`: http://www.ctan.org/tex-archive/macros/latex/contrib/teubner/

The latter option is provided for generation of a human readable graphical
representation as a Postscript or PDF file via LaTeX.

Limitations
-----------

As the segmentation of the individual characters is based on a connected
component analysis, the toolkit cannot deal with touching characters, unless
they have been trained as combinations. It is therefore in general only 
applicable to printed documents, rather than handwritten documents.

From a user's perspective, there are some points to beware in this toolkit:

- It does not include methods for preprocessing like skew correction
  or noise removal. For this purpose, the standard routines shipped with
  Gamera must be used beforehand, e.g. *rotation_angle_projections* for
  skew correction, or *despeckle* for noise removal.

- It does not provide prototypes of the Greek characters and accents.
  This means that characters must be trained on sample pages before using
  the toolkit.

- The standard page segmentation algorithm for textline separation
  is currently very basic.


User's Manual
''''''''''''''

This documentation is written for those who want to use the toolkit
for OCR, but are not interested in extending the toolkit itself.

- `Using the toolkit`_: gives an explanation on how to use the toolkit.

.. _`Using the toolkit`: usermanual.html


Developer's Documentation
'''''''''''''''''''''''''

This documentation is for those who want to extend the functionality of
the GreekOCR toolkit, or who want to write their own recognition script.

- Classes_: reference for the classes involved in the segmentation process.
  These are:

  * GreekOCR_ for Greek OCR recognition

- Functions_: the global functions defined by the toolkit

.. _Functions: functions.html
.. _Classes: classes.html
.. _GreekOCR: gamera.toolkits.greekocr.greekocr.GreekOCR.html


Installation
''''''''''''

We have only tested the toolkit on Linux and MacOS X, but as
the toolkit is written entirely in Python, the following
instructions should work for any operating system.


Prerequisites
-------------

First you will need a working installation of Gamera 4.x. See the 
`Gamera website`__ for details. It is strongly recommended that you use
a recent version, preferably from SVN.

.. __: http://gamera.sourceforge.net/

If you want to generate the documentation, you will need two additional
third-party Python libraries:

  - docutils_ for handling reStructuredText documents.

  - pygments_  for colorizing source code.

.. _docutils: http://docutils.sourceforge.net/
.. _pygments: http://pygments.org/

.. note:: It is generally not necessary to generate the documentation 
   because it is included in file releases of the toolkit.


Building and Installing
-----------------------

Gamera toolkits can be installed, throough pip. 

First create a binary "wheel package" under your
user account with::

    #1) build wheel
    python3 setup.py build bdist_wheel
 
This will create a package file "gamera-version-architecture.whl" in the
"dist" directory, which can then be installed system wide as root with::

    #2) installs wheel
    sudo pip3 install ./dist/gamera_greekocr-*.whl

Command 1) build the toolkit wheel from the sources. 

Command 2) installs the wheel.

Note that the script *greekocr4gamera* is installed into ``/usr/bin`` or
``/usr/local/bin`` on Linux and newer versions of MacOS X.

If you want to regenerate the documentation, go to the ``doc`` directory
and run the ``gendoc.py`` script. The output will be placed in the ``doc/html/``
directory.  The contents of this directory can be placed on a webserver
for convenient viewing.

.. note:: Before building the documentation you must install the
   toolkit. Otherwise ``gendoc.py`` will not find the plugin documentation.


Uninstallation
--------------

The unistallation works with pip like the installation::

	pip3 uninstall gamera-greekocr

As the latter requires root privilegue, you need to use ``sudo`` on Linux


About this documentation
''''''''''''''''''''''''

The documentation was written by Rene Baston and Christoph Dalitz.
Permission is granted to copy, distribute and/or modify this documentation
under the terms of the `Creative Commons Attribution Share-Alike License (CC-BY-SA) v3.0`__. In addition, permission is granted to use and/or
modify the code snippets from the documentation without restrictions.

.. __: http://creativecommons.org/licenses/by-sa/3.0/
